<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ResumeMapper">

	<insert id="registerResume" parameterType="com.service.spring.domain.ResumeVO">
		INSERT INTO resume (resume_id, content, post_check, seeker_id, company_id, generate_date, position, question_id)
		VALUES (RESUME_SEQ.NEXTVAL, #{content}, #{postCheck}, #{seekerId}, #{companyId}, SYSDATE, #{position}, #{questionId})	
	</insert>
	
	<delete id="deleteResume" parameterType="int">
		DELETE FROM resume WHERE resume_id = #{resumeId}
	</delete>
	
	<update id="updateResume" parameterType="com.service.spring.domain.ResumeVO">
		UPDATE resume SET
		content = #{content},
		post_check = #{postCheck}
		WHERE resume_id = #{resumeId}
	</update>
	
	<select id="getResume" resultType="com.service.spring.domain.ResumeVO">
		SELECT content, post_check, company_id, generate_date
		FROM resume
		WHERE resume_id = #{resumeId}
	</select>
	
	<select id="getResumeWithCompanyInfoById" resultType="com.service.spring.DTO.ResumeDTO">
		SELECT c.company_name, c.title, c.start_date, c.end_date, r.post_check
	    FROM resume r INNER JOIN company c
	    ON r.company_id = c.company_id
	    WHERE r.resume_id = #{resumeId}
	</select>
	
	<select id="getQnAByCompanyId" parameterType="int" resultType="com.service.spring.DTO.ResumeQnADTO">
		SELECT c.title, q.question, r.content
		FROM resume r
		JOIN company c ON r.company_id = c.company_id
		JOIN question q ON c.company_id = q.company_id
		WHERE c.company_id = #{companyId}
	</select>
	
	<select id="getCommentByResume" parameterType="int" resultType="com.service.spring.DTO.ResumeCommentDTO">
		SELECT rc.content, rc.rate, ui.id, umi.company_name
		FROM resume_comment rc
		JOIN resume r ON rc.resume_id = r.resume_id
		JOIN user_mentor_info umi ON rc.mentor_id = umi.mentor_id
		JOIN user_info ui ON umi.user_id = ui.user_id
		WHERE r.resume_id = #{resumeId}
	</select>
	
	<select id="getAllResumeBySeekerId" parameterType="int" resultType="com.service.spring.DTO.ResumeDTO">
		SELECT r.position, c.company_name, c.title, c.start_date, c.end_date, MAX(r.post_check) AS post_check
		FROM company c
		JOIN question q ON c.company_id = q.company_id
		JOIN resume r ON r.company_id = c.company_id
		JOIN user_seeker_info usi ON usi.seeker_id = r.seeker_id
		WHERE usi.seeker_id = #{seekerId}
		GROUP BY r.position, c.company_name, c.title, c.start_date, c.end_date
	</select>
	
	<update id="togglePostCheck" parameterType="String">
		UPDATE resume
  		SET post_check = CASE WHEN post_check = 0 THEN 1 ELSE 0 END
  		WHERE position = #{position}
	</update>
	
	<select id="getAllQuestionByResumeId" parameterType="String" resultType="com.service.spring.domain.QuestionVO">
		SELECT q.question, q.position, q.length, q.company_id
		FROM resume r JOIN question q
		ON r.question_id = q.question_id
		WHERE r.resume_id = #{resumeId}
	</select>
	
	<select id="getAllResumeByPosition" parameterType="com.service.spring.DTO.PositionDTO" resultType="com.service.spring.domain.ResumeVO">
		SELECT r.resume_id, r.content, r.post_check, r.generate_date, r.seeker_id, r.company_id, r.question_id
		FROM user_seeker_info s
		JOIN resume r ON s.seeker_id = r.seeker_id
		JOIN company c ON c.company_id = r.company_id
		WHERE c.company_id = #{companyId} AND s.seeker_id = #{seekerId} AND r.position = #{position}
	</select>
	
	<select id="getAllDataByPosition" parameterType="String" resultType="com.service.spring.DTO.ResultDTO">
		SELECT r.content, r.post_check, sf.tendency1, sf.tendency2, sf.tendency3, sf.tendency4, sf.tendency5, sf.rate1, sf.rate2, sf.rate3, sf.rate4, sf.rate5, cf.company_name, cf.company_needs1, cf.company_needs2, cf.company_needs3, cf.company_needs4, cf.company_needs5, cf.company_rate1, cf.company_rate2, cf.company_rate3, cf.company_rate4, cf.company_rate5, q.position, q.question, q.length
		FROM question q JOIN resume r
		ON q.question_id = r.question_id
		JOIN company_fit cf
		ON cf.position = r.position
		JOIN seeker_fit sf
		ON sf.position = r.position
		WHERE r.position = #{position} ORDER BY q.question_id 
	</select>
</mapper>